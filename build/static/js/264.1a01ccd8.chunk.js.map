{"version":3,"file":"static/js/264.1a01ccd8.chunk.js","mappings":"uNAEaA,EAAS,yCAAG,WAAOC,EAAgBC,GAAvB,mFACrBA,EAAS,CAACC,KAAM,gBADK,kBAGCC,IAAAA,KAAW,kBAAkBH,GAH9B,OAGXI,EAHW,OAIjBH,EAAS,CAACC,KAAK,gBAAgBG,QAAQD,EAAIE,OAJ1B,gDAQjBL,EAAS,CAACC,KAAK,gBAAgBG,QAAQ,EAAD,KARrB,yDAAH,wDAWTE,EAAU,yCAAE,WAAON,GAAP,sEACrBA,EAAS,CAACC,KAAK,WADM,2CAAF,qD,mLCuFvB,MA3FA,WACE,IAAMM,EAAIC,gCACV,GAAyBC,EAAAA,EAAAA,YAAWC,EAAAA,GAA5BC,EAAR,EAAQA,KAAKX,EAAb,EAAaA,SAEb,GAAyBY,EAAAA,EAAAA,WAAS,GAAlC,eAAOC,EAAP,KAAcC,EAAd,KAMIC,EAAY,yCAAE,4GAGVb,IAAAA,OAAa,cAAcS,EAAKK,KAHtB,OAIhBC,QAAQC,IAAI,WAJI,+CAQhBD,QAAQC,IAAR,MARgB,wDAAF,qDAgBhB,OACE,iBAAKC,UAAU,SAAf,WACA,gBAAKA,UAAU,cAAf,UACE,SAAC,KAAD,CAAMC,GAAG,IAAT,UACE,iBAAKD,UAAU,kBAAf,WACD,SAAC,MAAD,CAAyBA,UAAU,sBAClC,iBAAMA,UAAU,cAAhB,mCAIJ,iBAAKA,UAAU,eAAf,WACE,iBAAKA,UAAWN,EAAO,cAAc,kBAArC,WACE,SAAC,KAAD,CAAMO,GAAG,IAAT,UACE,iBAAKD,UAAU,oBAAf,WAEF,kBAAMA,UAAU,aAAhB,eAA8B,SAAC,MAAD,QAC9B,iBAAMA,UAAU,kBAAhB,wBAGA,SAAC,KAAD,CAAMC,GAAG,aAAT,UACA,iBAAKD,UAAU,oBAAf,WACA,kBAAMA,UAAU,aAAhB,eAA8B,SAAC,MAAD,QAC9B,iBAAMA,UAAU,kBAAhB,2BAGA,SAAC,KAAD,CAAMC,GAAG,eAAT,UACA,iBAAKD,UAAU,oBAAf,WACA,kBAAMA,UAAU,aAAhB,eAA8B,SAAC,MAAD,QAC9B,iBAAMA,UAAU,kBAAhB,yBAGA,SAAC,KAAD,CAAMC,GAAG,kBAAT,UACA,iBAAKD,UAAU,oBAAf,WACA,iBAAMA,UAAU,aAAhB,UAA6B,SAAC,MAAD,OAC7B,iBAAMA,UAAU,kBAAhB,0BAIA,iBAAKA,UAAU,oBAAqBE,QAAS,YAxDpDf,EAAAA,EAAAA,GAAWN,GAyDUe,GACb,EAFD,WAGA,iBAAMI,UAAU,aAAhB,UAA8B,SAAC,MAAD,OAC9B,iBAAMA,UAAU,kBAAhB,yBAIF,SAAC,KAAD,CAAMC,GAAE,mBAAcT,EAAKW,UAA3B,UACE,iBAAKH,UAAU,qBAAf,WACF,gBAAKI,IAAKZ,EAAKa,aAAgBjB,EAAGI,EAAKa,aAAejB,EAAG,eAAiBkB,IAAI,GAAGN,UAAU,oBAC3F,iBAAMA,UAAU,sCAAhB,8BAKD,gBAAKA,UAAU,sBAAsBE,QA1DxB,WAEhBP,GAAWD,EACZ,EAuDI,SACEA,GAAO,SAAC,MAAD,KAAa,SAAC,MAAD,WAQ1B,C,qJC5CD,MAlDA,YAA6D,IAAxCa,EAAuC,EAAvCA,YAAYC,EAA2B,EAA3BA,UAAUC,EAAiB,EAAjBA,eACvC,GAA2BhB,EAAAA,EAAAA,UAAS,IAApC,eAAOiB,EAAP,KAAeC,EAAf,KACA,GAAuClB,EAAAA,EAAAA,UAAS,IAAhD,eAAOmB,EAAP,KAAqBC,EAArB,KACMzB,EAAGC,iCAETyB,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAU,yCAAC,yGAEGhC,IAAAA,IAAU,sBAAsByB,GAFnC,OAEPxB,EAFO,OAGb2B,EAAW3B,EAAIE,MAHF,2CAAD,qDAKhB6B,GACH,GAAC,CAACP,KAIHM,EAAAA,EAAAA,YAAU,WAEND,EAAiBH,EAAQM,QAAO,SAACC,GAAD,cAAKV,QAAL,IAAKA,OAAL,EAAKA,EAAaW,SAAb,OAAsBD,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAGpB,IAA9B,IACnC,GAAC,CAACa,EAAQH,IAEX,IAAMY,EAAW,yCAAG,WAAO3B,GAAP,qGAGCT,IAAAA,IAAA,iCAAoCyB,EAApC,mBAAiDhB,QAAjD,IAAiDA,OAAjD,EAAiDA,EAAMK,MAHxD,OAGVb,EAHU,OAIhByB,EAAezB,EAAIE,MAJH,gDAQhBY,QAAQC,IAAR,MARgB,yDAAH,sDAWnB,OACE,gBAAKC,UAAU,cAAf,SACKY,EAAcQ,KAAI,SAAAC,GAAC,OACjB,iBAAKrB,UAAU,qBAAoBE,QAAS,kBAAIiB,EAAYE,EAAhB,EAA5C,WACA,iBAAKrB,UAAU,4BAAf,WACI,gBAAKI,IAAM,OAADiB,QAAC,IAADA,GAAAA,EAAGhB,aAAcjB,GAAE,OAACiC,QAAD,IAACA,OAAD,EAACA,EAAGhB,cAAajB,EAAG,eAAekB,IAAI,GAAGN,UAAU,qBACjF,iBAAMA,UAAU,0BAEpB,gBAAKA,UAAU,mBAAf,gBAAmCqB,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAGlB,aANrB,KAa3B,ECnBD,MA9BA,YAAqD,IAA7BmB,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,YACpC,GAAqB9B,EAAAA,EAAAA,UAAS,MAA9B,eAAOD,EAAP,KAAYgC,EAAZ,KACMpC,EAAGC,gCAkBT,OAjBAyB,EAAAA,EAAAA,YAAU,WAER,IAAMW,EAASH,EAAaI,QAAQC,MAAK,SAACC,GAAD,OAAKA,IAAML,EAAY1B,GAAvB,IACnCgC,EAAO,yCAAE,kHAGG9C,IAAAA,IAAU,qBAAqB0C,GAHlC,OAGPzC,EAHO,OAIbwC,EAAQxC,EAAIE,MAJC,gDAQXY,QAAQC,IAAR,MARW,yDAAF,qDAWb8B,GACD,GAAC,CAACN,EAAYD,KAIb,iBAAKtB,UAAU,gBAAf,WACI,gBAAKA,UAAU,oBAAqBI,IAAS,OAAJZ,QAAI,IAAJA,GAAAA,EAAMa,aAAejB,GAAE,OAACI,QAAD,IAACA,OAAD,EAACA,EAAMa,cAAejB,EAAG,eAAgBkB,IAAI,MAC7G,iBAAMN,UAAU,sBAAhB,gBAAuCR,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAMW,aAIpD,E,UCdD,MAbA,YAAkC,IAAhB2B,EAAe,EAAfA,QAASC,EAAM,EAANA,IACzB,OACE,iBAAK/B,UAAY+B,EAAK,cAAe,WAArC,WACI,iBAAK/B,UAAU,cAAf,WACI,gBAAKI,IAAI,uIAAuIE,IAAI,GAAGN,UAAU,qBACjK,cAAGA,UAAU,uBAAb,gBAAqC8B,QAArC,IAAqCA,OAArC,EAAqCA,EAASE,WAGlD,gBAAKhC,UAAU,iBAAf,UAAiCiC,EAAAA,EAAAA,IAAM,OAACH,QAAD,IAACA,OAAD,EAACA,EAASI,eAGxD,E,8BCsKD,MA1KA,WACE,OAAuCzC,EAAAA,EAAAA,UAAS,IAAhD,eAAO0C,EAAP,KAAqBC,EAArB,KACA,GAAmC3C,EAAAA,EAAAA,UAAS,MAA5C,eAAO4C,EAAP,KAAmB5B,EAAnB,KACA,GAA6BhB,EAAAA,EAAAA,UAAS,IAAtC,eAAO6C,EAAP,KAAgBC,EAAhB,KACA,GAAmC9C,EAAAA,EAAAA,UAAS,IAA5C,eAAO+C,EAAP,KAAmBC,EAAnB,KACA,GAAyChD,EAAAA,EAAAA,UAAS,MAAlD,eAAOiD,EAAP,KAAsBC,EAAtB,KACA,GAAmClD,EAAAA,EAAAA,UAAS,IAA5C,eAAOc,EAAP,KAAmBqC,EAAnB,KAEMC,GAAUC,EAAAA,EAAAA,UACVC,GAAQD,EAAAA,EAAAA,UAEPtD,GAAOF,EAAAA,EAAAA,YAAWC,EAAAA,GAAlBC,KACAwD,EAAU3D,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,EAAAA,wBAAAA,iCAAY4D,MAE7BnC,EAAAA,EAAAA,YAAU,WAERiC,EAAOG,SAAQC,EAAAA,EAAAA,IAAGH,GAClBD,EAAOG,QAAQE,GAAG,cAAa,SAAAlE,GAE5ByD,EAAkB,CACjBU,OAAOnE,EAAKoE,SACZtB,KAAK9C,EAAK8C,KACVE,UAAUqB,KAAKC,OAGlB,GACF,GAAC,KACF1C,EAAAA,EAAAA,YAAU,WAEN4B,IAAc,OAAIL,QAAJ,IAAIA,OAAJ,EAAIA,EAAaX,QAAQR,SAASwB,EAAeW,UAC/Dd,GAAY,SAACkB,GAAD,wBAAYA,GAAZ,CAAiBf,GAAjB,GACf,GAAC,CAACA,EAAeL,KAGnBvB,EAAAA,EAAAA,YAAU,WAGTiC,EAAOG,QAAQQ,KAAK,UAAUlE,EAAKK,KACnCkD,EAAOG,QAAQE,GAAG,WAAU,SAAAO,GAEzBf,EAAepD,EAAKoE,UAAU5C,QAAO,SAACC,GAAD,OAAM0C,EAAME,MAAK,SAACC,GAAD,OAAM,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAGC,UAAU9C,CAAlB,GAAjB,IAIvC,GACD,GAAC,CAACzB,KAIFsB,EAAAA,EAAAA,YAAU,WAER,IAAMkD,EAAe,yCAAE,kHAGJjF,IAAAA,IAAU,qBAAqBS,EAAKK,KAHhC,OAGfb,EAHe,OAIrBoD,EAAiBpD,EAAIE,MAJA,gDAQnBY,QAAQC,IAAR,MARmB,yDAAF,qDAWrBiE,GACD,GAAC,CAACxE,EAAKK,OAGRiB,EAAAA,EAAAA,YAAU,WAER,IAAMmD,EAAW,yCAAG,kHAGDlF,IAAAA,IAAU,wBAAgBsD,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAaxC,MAHtC,OAGZb,EAHY,OAIlBuD,EAAYvD,EAAIE,MAJE,gDAQhBY,QAAQC,IAAR,MARgB,yDAAH,qDAWjBkE,GACD,GAAC,CAAC5B,IACH,IAAM6B,EAAY,yCAAG,WAAMC,GAAN,uFAEpBA,EAAEC,iBACItC,EAAQ,CACbuB,OAAO7D,EAAKK,IACZmC,KAAKQ,EACL6B,eAAehC,EAAYxC,KAGtByE,EAAWjC,EAAYX,QAAQC,MAAK,SAAA4C,GAAM,OAAGA,IAAS/E,EAAKK,GAAjB,IAEhDkD,EAAOG,QAAQQ,KAAK,cAAc,CACjCJ,SAAS9D,EAAKK,IACdyE,WAAAA,EACAtC,KAAKQ,IAdc,kBAkBDzD,IAAAA,KAAW,eAAe+C,GAlBzB,OAkBZ9C,EAlBY,OAmBlBuD,EAAY,GAAD,eAAKD,GAAL,CAActD,EAAIE,QAC7BuD,EAAe,IApBG,kDAwBnB3C,QAAQC,IAAR,MAxBmB,0DAAH,sDAmClB,OALAe,EAAAA,EAAAA,YAAU,WACT,IAAD,EACE,UAAA+B,EAAUK,eAAV,SAAmBsB,eAAe,CAACC,UAAU,UAE9C,GAAC,CAACnC,KAED,iCACA,SAACoC,EAAA,QAAD,KACA,iBAAK1E,UAAU,YAAf,WACI,gBAAKA,UAAU,YAAf,UACI,iBAAKA,UAAU,oBAAf,WAEI,eAAIA,UAAU,oBAAd,uDACCmC,EAAcf,KAAI,SAACE,GAAD,OAEjB,gBAAKpB,QAAS,kBAAIO,EAAea,EAAnB,EAAd,UACA,SAAC,EAAD,CAAsCA,aAAcA,EAAcC,YAAa/B,GAA3D8B,EAAazB,MAHhB,UAU3B,gBAAKG,UAAU,WAAf,UACA,gBAAKA,UAAU,mBAAf,SACIqC,GACF,iCACE,gBAAKrC,UAAU,eAAf,SACGsC,EAASlB,KAAI,SAACQ,GAAD,OACZ,gBAAK+C,IAAK9B,EAAV,UACA,SAAC,EAAD,CAAqBf,QAASF,EAAIG,KAAM,OAADH,QAAC,IAADA,OAAA,EAAAA,EAAGyB,UAAW7D,EAAKK,KAA5C+B,EAAE/B,MAFJ,OAQhB,iBAAKG,UAAU,kBAAf,WACA,qBAAUA,UAAU,sBAAsB4E,YAAY,qBACtDC,SAAU,SAACV,GAET1B,EAAe0B,EAAEW,OAAOC,MACzB,EACDA,MAAOvC,KAEP,mBAAQxC,UAAU,gBAAgBE,QAASgE,EAA3C,yBAEK,iBAAMlE,UAAU,mBAAhB,qEAGT,gBAAKA,UAAU,cAAf,UACA,gBAAKA,UAAU,sBAAf,UACE,SAAC,EAAD,CAAYO,YAAaA,EAAaC,UAAS,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAMK,IAAKY,eAAgBA,aAMrF,C","sources":["apiCalls.js","components/topbar/Topbar.js","components/chatOnline/ChatOnline.js","components/coversations/Conversations.js","components/message/Message.js","pages/messanger/Messanger.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nexport const loginCall = async (userCredentials,dispatch) =>{\r\n    dispatch({type: \"LOGIN_START\"});\r\n    try{\r\n        const res = await axios.post(\"/api/auth/login\",userCredentials);\r\n        dispatch({type:\"LOGIN_SUCCESS\",payload:res.data})\r\n    }\r\n    catch(err)\r\n    {\r\n        dispatch({type:\"LOGIN_FAILURE\",payload:err})\r\n    }\r\n}\r\nexport const logoutCall =async (dispatch)=>{\r\n    dispatch({type:\"LOGOUT\"});\r\n};","import React, { useContext, useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n// import {Chat , ExitToAppOutlined, PeopleAltOutlined, UpdateOutlined, HomeOutlined, CastConnectedOutlined, Close} from \"@material-ui/icons\";\r\nimport {MdChat,MdLogout,MdSupervisorAccount,MdUpdate,MdHome,MdClear,MdConnectWithoutContact ,MdMenu} from \"react-icons/md\";\r\nimport \"./Topbar.css\"\r\nimport {AuthContext} from \"../../../src/context/AuthContext\";\r\nimport {logoutCall} from \"../../apiCalls\";\r\nimport axios from 'axios';\r\n// import { Menu } from \"@material-ui/icons\"\r\nfunction Topbar() {\r\n  const PF= process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user,dispatch} = useContext(AuthContext);\r\n \r\n  const [ismenu,setIsMenu]=useState(false);\r\n//  console.log(`${user.username}`);\r\nconst handleclick=()=>\r\n{\r\n logoutCall(dispatch);\r\n}\r\nconst handledelete =async()=>\r\n{\r\n  try{\r\n    await axios.delete(\"/api/users/\"+user._id);\r\n    console.log(\"deleted\");\r\n  }\r\n  catch(err)\r\n  {\r\n    console.log(err);\r\n  }\r\n  \r\n}\r\nconst handleMenu =()=>\r\n{\r\n  setIsMenu(!ismenu);\r\n}\r\n  return (\r\n    <div className='topbar'>\r\n    <div className='topbar-left'>\r\n      <Link to=\"/\">\r\n        <div className='topbar-logo-div'>\r\n       <MdConnectWithoutContact className='topbar-logo-icon' />\r\n        <span className='topbar-logo'>SOciAL BEinGS</span>\r\n        </div>\r\n        </Link>\r\n    </div>\r\n    <div className='topbar-right'>\r\n      <div className={ismenu?\"topbarLinks\":\"topbarLinksmenu\"}>\r\n        <Link to=\"/\">\r\n          <div className='topbar-menu-icon '>\r\n\r\n        <span className='topbarLink'> <MdHome /></span>\r\n        <span className='topbarLink-text'>Home</span>\r\n        </div>\r\n        </Link>\r\n        <Link to=\"/messanger\">\r\n        <div className='topbar-menu-icon ' >\r\n        <span className='topbarLink'> <MdChat /></span>\r\n        <span className='topbarLink-text'>Message</span>\r\n        </div>\r\n        </Link>\r\n        <Link to=\"/showAllUser\">\r\n        <div className='topbar-menu-icon '>\r\n        <span className='topbarLink'> <MdSupervisorAccount /></span>\r\n        <span className='topbarLink-text'>Users</span>\r\n        </div>\r\n        </Link>\r\n        <Link to=\"/updateuserdata\">\r\n        <div className='topbar-menu-icon '>\r\n        <span className=\"topbarLink\"><MdUpdate /></span>\r\n        <span className='topbarLink-text'>Update</span>\r\n        </div>\r\n        </Link>\r\n        \r\n        <div className='topbar-menu-icon '  onClick={()=>{handleclick();\r\n                      handledelete();\r\n        }}>\r\n        <span className=\"topbarLink\" ><MdLogout /></span>\r\n        <span className='topbarLink-text'>Log Out</span>\r\n        </div>\r\n       \r\n\r\n      <Link to={`/profile/${user.username}`}>\r\n        <div className='topbar-menu-icon  '>\r\n      <img src={user.profilePhoto ?  PF+user.profilePhoto : PF+\"noAvatar.png\" } alt='' className='topbar-dp-img ' />\r\n      <span className='topbarLink-text topbar-profile-icon'>Profile</span>\r\n      </div>\r\n      </Link>\r\n     \r\n     </div>\r\n     <div className='menu-hamburger-icon' onClick={handleMenu}>\r\n      {ismenu?<MdClear />: <MdMenu  />}\r\n     \r\n      </div>\r\n     \r\n    \r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Topbar","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport \"./chatOnline.css\"\r\n\r\nfunction ChatOnline({onlineUsers,currentId,setCurrentChat}) {\r\n    const [friends,setFriends]=useState([]);\r\n    const [onlineFriends,setOnlineFriends]=useState([]);\r\n    const PF=process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n    useEffect(()=>\r\n    {\r\n        const getFriends=async ()=>\r\n        {\r\n            const res=await axios.get(\"/api/users/friends/\"+currentId);\r\n            setFriends(res.data);\r\n        }\r\n        getFriends();\r\n    },[currentId])\r\n    //  console.log(onlineFriends);\r\n    //  console.log(friends);\r\n\r\n    useEffect(()=>\r\n    {\r\n        setOnlineFriends(friends.filter((f)=>onlineUsers?.includes(f?._id)))\r\n    },[friends,onlineUsers])\r\n    // console.log(onlineUsers);\r\n    const handleClick = async (user)=>\r\n    {\r\n      try{\r\n        const res= await axios.get(`/api/conversation/find/${currentId}/${user?._id}`);\r\n        setCurrentChat(res.data);\r\n      }\r\n      catch(err)\r\n      {\r\n        console.log(err);\r\n      }\r\n    }\r\n  return (\r\n    <div className='chat-online'>\r\n        {onlineFriends.map(o=>(\r\n           <div className='chat-online-friend'onClick={()=>handleClick(o)}>\r\n           <div className='chat-online-img-contanier'>\r\n               <img src={o?.profilePhoto? PF+o?.profilePhoto:PF+\"noAvatar.png\"}alt=\"\" className='chat-online-img' /> \r\n               <span className='chat-online-badge'></span>\r\n           </div>\r\n           <div className='chat-online-name'>{o?.username}</div>\r\n       </div>\r\n        ))}\r\n        \r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatOnline","import React, { useEffect, useState } from 'react'\r\nimport \"./conversations.css\"\r\nimport axios from \"axios\";\r\nfunction Conversations({conversation ,currentUser}) {\r\n  const [user,setUser]=useState(null);\r\n  const PF=process.env.REACT_APP_PUBLIC_FOLDER;\r\n  useEffect(()=>\r\n  {\r\n    const friendId=conversation.members.find((m)=>m !== currentUser._id);\r\n    const getUser =async ()=>\r\n    {\r\n      try{\r\n      const res=await axios.get(\"/api/users?userId=\"+friendId);\r\n      setUser(res.data);\r\n      }\r\n      catch(err)\r\n      {\r\n        console.log(err);\r\n      }\r\n    }\r\n    getUser();\r\n  },[currentUser,conversation])\r\n\r\n  return (\r\n    // question zaroori hai agar nhi hui toh\r\n    <div className='conversations'>\r\n        <img className='conversations-img'  src={user?.profilePhoto ? PF+user?.profilePhoto : PF+\"noAvatar.png\"} alt=\"\" />\r\n        <span className='conversations-name '>{user?.username}</span>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Conversations","import React from 'react';\r\nimport \"./message.css\";\r\nimport {format} from \"timeago.js\"\r\n\r\nfunction Message({message ,own}) {\r\n  return (\r\n    <div className={ own? 'message own' :'message '}>\r\n        <div className='message-top'>\r\n            <img src=\"https://images.pexels.com/photos/38289/portrait-photography-profile-face-one-38289.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\" alt=\"\" className='message-top-img'></img>\r\n            <p className='message-top-img-text'>{message?.text}\r\n            </p>\r\n        </div>\r\n        <div className='message-bottom'>{format(message?.createdAt)}</div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Message","\r\nimport React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport ChatOnline from '../../components/chatOnline/ChatOnline';\r\nimport Conversations from '../../components/coversations/Conversations';\r\nimport Message from '../../components/message/Message';\r\nimport Topbar from '../../components/topbar/Topbar';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport \"./messanger.css\";\r\nimport axios from \"axios\";\r\nimport {io} from \"socket.io-client\";\r\n\r\nfunction Messanger() {\r\n  const [conversations,setConversations]=useState([]);\r\n  const [currentChat,setCurrentChat]=useState(null);\r\n  const [messages,setMessages]=useState([]);\r\n  const [newMessages,setnewMessages]=useState(\"\");\r\n  const [arrivalMessage,setArrivalMessage]=useState(null);\r\n  const [onlineUsers,setOnlineUsers]=useState([]);\r\n  // const [socket,setSocket]=useState(null);\r\n  const scrollRef=useRef();\r\n  const socket =useRef();\r\n\r\n  const {user}= useContext(AuthContext);\r\n   const ENDPOINT= process.env.PORT;\r\n\r\n  useEffect(()=>\r\n  {\r\n    socket.current=io(ENDPOINT);\r\n    socket.current.on(\"getMessage\",data=>\r\n    {\r\n       setArrivalMessage({\r\n        sender:data.senderId,\r\n        text:data.text,\r\n        createdAt:Date.now()\r\n\r\n       })\r\n    })\r\n  },[])\r\n  useEffect(()=>\r\n  {\r\n      arrivalMessage && currentChat?.members.includes(arrivalMessage.sender)&&\r\n      setMessages((prev)=>[...prev,arrivalMessage]);\r\n  },[arrivalMessage,currentChat])\r\n  // whenever socket changes\r\n\r\n useEffect(()=>\r\n {\r\n  // client to server \r\n  socket.current.emit(\"addUser\",user._id);\r\n  socket.current.on(\"getUser\",users=>\r\n  {\r\n     setOnlineUsers(user.following.filter((f) =>users.some((u)=>u?.userId ===f )));\r\n    // setOnlineUsers(users);\r\n\r\n    // console.log(users);\r\n  })\r\n },[user])\r\n  \r\n \r\n  // useeffect will fetch all the message of this user\r\n  useEffect(()=>\r\n  {\r\n    const getConversation =async()=>\r\n    {\r\n      try{\r\n      const res= await axios.get(\"/api/conversation/\"+user._id);\r\n      setConversations(res.data);\r\n      }\r\n      catch(err)\r\n      {\r\n        console.log(err);\r\n      }\r\n    }\r\n    getConversation();\r\n  },[user._id])\r\n  \r\n  //[user._id] is the dependencies\r\n  useEffect(()=>\r\n  {\r\n    const getMessages = async ()=>\r\n    {\r\n      try{\r\n      const res= await axios.get(\"/api/message/\"+currentChat?._id);\r\n      setMessages(res.data);\r\n      }\r\n      catch(err)\r\n      {\r\n        console.log(err);\r\n      }\r\n    }\r\n    getMessages();\r\n  },[currentChat])\r\n  const handleSubmit = async(e)=>\r\n  {\r\n   e.preventDefault();\r\n   const message={\r\n    sender:user._id,\r\n    text:newMessages,\r\n    conversationId:currentChat._id\r\n   }\r\n\r\n   const receiverId=currentChat.members.find(member =>member!==user._id);\r\n\r\n   socket.current.emit(\"sendMessage\",{\r\n    senderId:user._id,\r\n    receiverId,\r\n    text:newMessages\r\n  })\r\n\r\n   try{\r\n     const res =await axios.post(\"/api/message\",message);\r\n     setMessages([...messages,res.data]);\r\n     setnewMessages(\"\");\r\n   }\r\n   catch(err)\r\n   {\r\n    console.log(err);\r\n   }\r\n  }\r\n\r\n  // whenever messages change fire this\r\n\r\n  useEffect(()=>\r\n  {\r\n    scrollRef.current?.scrollIntoView({behaviour:\"smooth\"})\r\n\r\n  },[messages])\r\n  return (\r\n    <>\r\n    <Topbar />\r\n    <div className='messanger'>\r\n        <div className='chat-menu'>\r\n            <div className='chat-menu-wrapper'>\r\n                {/* <input placeholder='Search for your friends' className='chat-menu-input'/> */}\r\n                <h4 className='messanger-heading'>Connect to people🤜🤛</h4>\r\n                {conversations.map((conversation)=>\r\n                (\r\n                  <div onClick={()=>setCurrentChat(conversation)}>\r\n                  <Conversations key={conversation._id} conversation={conversation} currentUser={user}/>\r\n                  </div>\r\n                ))}\r\n               \r\n               \r\n            </div>\r\n        </div>\r\n        <div className='chat-box'>\r\n        <div className='chat-box-wrapper'>\r\n          { currentChat ?\r\n          <>\r\n            <div className='chat-box-top'>\r\n              {messages.map((m)=>(\r\n                <div ref={scrollRef}>\r\n                <Message key={m._id} message={m}  own={m?.sender === user._id } />\r\n                </div>\r\n              ))}\r\n            \r\n            \r\n            </div>\r\n            <div className=\"chat-box-bottom\"> \r\n            <textarea className='chat-box-bottom-msg' placeholder='write something...'\r\n            onChange={(e)=>\r\n            {\r\n              setnewMessages(e.target.value);\r\n            }}\r\n            value={newMessages}\r\n            ></textarea>\r\n            <button className='chat-box-send' onClick={handleSubmit}>Send</button>\r\n            </div>\r\n            </> :<span className='chat-box-no-chat'>Open a conversation to start the chat 👀</span>}\r\n        </div>\r\n        </div>\r\n        <div className='chat-online'>\r\n        <div className='chat-online-wrapper'>\r\n          <ChatOnline onlineUsers={onlineUsers} currentId={user?._id} setCurrentChat={setCurrentChat}/>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Messanger"],"names":["loginCall","userCredentials","dispatch","type","axios","res","payload","data","logoutCall","PF","process","useContext","AuthContext","user","useState","ismenu","setIsMenu","handledelete","_id","console","log","className","to","onClick","username","src","profilePhoto","alt","onlineUsers","currentId","setCurrentChat","friends","setFriends","onlineFriends","setOnlineFriends","useEffect","getFriends","filter","f","includes","handleClick","map","o","conversation","currentUser","setUser","friendId","members","find","m","getUser","message","own","text","format","createdAt","conversations","setConversations","currentChat","messages","setMessages","newMessages","setnewMessages","arrivalMessage","setArrivalMessage","setOnlineUsers","scrollRef","useRef","socket","ENDPOINT","PORT","current","io","on","sender","senderId","Date","now","prev","emit","users","following","some","u","userId","getConversation","getMessages","handleSubmit","e","preventDefault","conversationId","receiverId","member","scrollIntoView","behaviour","Topbar","ref","placeholder","onChange","target","value"],"sourceRoot":""}