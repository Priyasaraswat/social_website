{"version":3,"file":"static/js/866.0a742b4b.chunk.js","mappings":"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","sources":["../../../src/lang/en_US.ts","../../../src/lang/zh_CN.ts","../../src/register.ts","../../../src/utils/date.ts","../../src/format.ts","../../src/index.ts","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":[null,null,null,null,null,null,"export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["EN_US","ZH_CN","Locales","register","locale","func","SEC_ARRAY","toDate","input","Date","isNaN","test","parseInt","trim","replace","format","date","opts","sec","relativeDate","diffSec","diff","localeFunc","agoIn","totalSec","Math","abs","idx","length","floor","toString","formatDiff","getLocale","unit","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","constructor","value","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","call","e","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","arguments","apply","_superPropBase","object","property","hasOwnProperty","_get","get","receiver","base","desc","getOwnPropertyDescriptor","_construct","Parent","args","Class","a","push","Function","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","has","set","Wrapper","PACKET_TYPES","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","split","readAsDataURL","supportsBinary","obj","isView","buffer","chars","lookup","Uint8Array","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","mapBinary","encodedPacket","charAt","substring","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","window","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","globalThis","clearTimeoutFn","prev","TransportError","reason","description","context","Error","Transport","query","readyState","socket","doOpen","doClose","onClose","packets","write","packet","decodePacket","onPacket","details","alphabet","map","seed","encode","num","encoded","yeast","now","str","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","poll","onPause","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","encodePacket","encodePayload","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","path","assign","Request","uri","req","request","method","xhrStatus","onError","onData","pollXhr","async","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","transports","websocket","re","parts","parse","src","b","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","_createForOfIteratorHelper","allowArrayLike","it","Symbol","iterator","isArray","unsupportedIterableToArray","F","s","n","done","_e","f","normalCompletion","didErr","step","next","_e2","withNativeFile","File","isBinary","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","start","buf","payload","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}