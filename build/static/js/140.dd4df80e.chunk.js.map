{"version":3,"file":"static/js/140.dd4df80e.chunk.js","mappings":"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","sources":["components/share/Share.js","components/post/Post.js","components/centerbar/Centerbar.js"],"sourcesContent":["import React, { useContext, useRef, useState } from 'react'\r\nimport \"./Share.css\"\r\n// import {PermMedia ,Label,Room,EmojiEmotions} from \"@material-ui/icons\"\r\nimport { MdPermMedia ,MdEmojiEmotions,MdLabel,MdLocationOn ,MdClear} from \"react-icons/md\";\r\nimport {AuthContext} from \"../../../src/context/AuthContext\";\r\nimport axios from \"axios\"\r\n// import {Cancel} from \"@material-ui/icons\"\r\n\r\nfunction Share() {\r\n  const PF= process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const {user} =useContext(AuthContext);\r\n  const desc=useRef();\r\n  const [file,setFile]=useState(null);\r\n  const submitHandler = async (e)=>\r\n  {\r\n     e.preventDefault();\r\n     const newPost= {\r\n      userId:user._id,\r\n      desc:desc.current.value\r\n     }\r\n     if(file)\r\n     {\r\n      const data=new FormData();\r\n      const fileName= Date.now() + file.name;\r\n      data.append(\"name\",fileName);\r\n      data.append(\"file\",file);\r\n      newPost.img=fileName;\r\n      try{\r\n       await axios.post(\"/api/upload\",data);\r\n      }\r\n      catch(err)\r\n      {\r\n        console.log(err);\r\n      }\r\n     }\r\n     try{\r\n         await axios.post(\"/api/posts\",newPost);\r\n         window.location.reload();\r\n     }\r\n      catch(err)\r\n      {\r\n      console.log(err);\r\n      }\r\n     \r\n  }\r\n\r\n  return (\r\n    <div className='share'>\r\n        <div className='shareTop'> \r\n         <img  src={user.profilePhoto? PF+user.profilePhoto : PF+\"noAvatar.png\"} alt=\"\" className='shareimg'/>\r\n         <input placeholder={\"What's in your mind \"+ user.username +\"?\"}\r\n         ref={desc} \r\n         className='share-input'/>\r\n        </div>\r\n        <hr className='shareHr'/>\r\n        {file && (\r\n          <div className='share-img-container'>\r\n            <img  className =\" share-img-file\" src={URL.createObjectURL(file)} alt=\"\" />\r\n            <MdClear  className=\"share-cancel-img-btn\" onClick={()=>\r\n            setFile(null)}\r\n            />\r\n          </div>\r\n        )}\r\n        <form className='share-bottom' onSubmit={submitHandler}>\r\n          <div className='share-options'>\r\n          <label  htmlFor=\"file\" className='share-option'>\r\n            <MdPermMedia  className=\"shareIcon mediaicon\"  />\r\n            <span className='shareIconOptionText'>Photo or Video</span>\r\n            <input style={{display:\"none\"}} type=\"file\" id=\"file\" accept='.png,.jpg,.jpeg' onChange={(e)=>setFile(e.target.files[0])} />\r\n          </label>\r\n          <div className='share-option'>\r\n            <MdLabel className=\"shareIcon labelicon\" />\r\n            <span className='shareIconOptionText'>Tag</span>\r\n          </div>\r\n          <div className='share-option'>\r\n            <MdLocationOn className=\"shareIcon locationicon\"   />\r\n            <span className='shareIconOptionText'>Location</span>\r\n          </div>\r\n          <div className='share-option'>\r\n            <MdEmojiEmotions className=\"shareIcon emojiicon\"  />\r\n            <span className='shareIconOptionText'>Feelings</span>\r\n          </div>\r\n          <button className='share-button' type=\"submit\">Share</button>\r\n       </div>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Share","import React, { useState , useEffect, useContext } from 'react'\r\nimport \"./post.css\"\r\n// import {DeleteForever, MoreVert } from \"@material-ui/icons\"\r\nimport { VscKebabVertical } from \"react-icons/vsc\";\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\nimport {format} from \"timeago.js\"\r\n import axios from \"axios\"\r\n import {Link} from 'react-router-dom'\r\n import { AuthContext } from '../../context/AuthContext';\r\n\r\nfunction Post({post}) {\r\n  // useState ke andar default value hai\r\n const [like,setLike] =useState(post.likes.length);\r\n const [isLiked,setIsLiked]=useState(false);\r\n const PF=process.env.REACT_APP_PUBLIC_FOLDER;\r\n const [user,setUser] =useState({});\r\n const {user:currentUser} =useContext(AuthContext);\r\n const [isActive,setIsActive]=useState(false);\r\n\r\n useEffect(()=>{\r\n     setIsLiked(post.likes.includes(currentUser._id))\r\n },[currentUser._id,post.likes]);\r\n \r\n useEffect(() => {\r\n  const fetchUser = async () => {\r\n   const res = await axios.get(`/api/users?userId=${post.userId}`);\r\n     setUser(res.data);\r\n  }; \r\n  fetchUser();\r\n},[post.userId]);\r\n// console.log(user);\r\n const likeHandler =()=>\r\n {\r\n  try\r\n  {\r\n     axios.put(\"/api/posts/\"+post._id+\"/like\",{userId:currentUser._id});\r\n  }\r\n  catch(err)\r\n  {\r\n\r\n  }\r\n   setLike(isLiked ? like-1:like+1);\r\n   setIsLiked(!isLiked);\r\n }\r\n const handleclick =()=>\r\n {\r\n  if(isActive)\r\n  {\r\n    setIsActive(false);\r\n  }\r\n  else\r\n  {\r\n  setIsActive(true);\r\n  }\r\n  \r\n }\r\n const handledelete = ()=>\r\n {\r\n  try{\r\n   axios.delete(\"/api/posts/\"+post._id);\r\n   window.location.reload();\r\n  }\r\n  catch(err)\r\n  {\r\n    console.log(err);\r\n  }\r\n\r\n }\r\n \r\n  return (\r\n    <div className='post'>\r\n        <div className='post-top'>\r\n            <div className='post-top-left'>\r\n              <Link to={`/profile/${user.username}`}>\r\n                \r\n                <img  src={user.profilePhoto? PF+user.profilePhoto : PF+\"noAvatar.png\"} alt=\"\" className='post-user-img'/>\r\n                </Link>\r\n                <span className='post-user-name'>{user.username}</span>\r\n                <span className='post-time'>{format(post.createdAt)}.</span>\r\n            </div>\r\n            <div className='post-top-right'>\r\n              {/* <div className='delete-post-icon active-icon'>Delete</div> */}\r\n              <div className={isActive?'active-icon':'delete-post-icon'} onClick={handledelete}>\r\n                <MdDeleteForever /> Delete the post</div>\r\n              <VscKebabVertical className='share-icon'onClick={handleclick}/>\r\n              \r\n              \r\n            </div>\r\n        </div>\r\n        <div className='post-center'>\r\n        <span className='post-caption'>{post?.desc}</span>\r\n        <img src={PF+post.img} alt=\"\" className='post-img'/>\r\n        \r\n        </div>\r\n        <div className='post-bottom'>\r\n          <div className='post-bottom-left'>\r\n          <img src={PF+\"likes.png\"} alt=\"\" className='post-like' onClick={likeHandler} />\r\n          <img src={PF+\"heart.png\"} alt=\"\" className='post-heart' onClick={likeHandler}/>\r\n          <span className='post-like-text'>{like} liked it</span>\r\n          </div>\r\n          \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./Centerbar.css\";\r\nimport Share from \"../share/Share\";\r\nimport Post from \"../post/Post\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nfunction Centerbar({ username }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const {user}= useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const res = username ?\r\n      \r\n         await axios.get(\"/api/posts/profile/\" + username)\r\n          : await axios.get(\"/api/posts/timeline/\" +user._id);\r\n          setPosts(res.data.sort((p1,p2)=>{\r\n          return new Date(p2.createdAt)-new Date(p1.createdAt);\r\n        }));\r\n        \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, [username ,user._id]);\r\n\r\n  return (\r\n    <div className=\"centerbar\">\r\n      {(!username || username === user.username) && <Share />}\r\n      {posts.map((p) => (\r\n        <Post key={p._id} post={p} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Centerbar;\r\n"],"names":["PF","process","user","useContext","AuthContext","desc","useRef","useState","file","setFile","submitHandler","e","preventDefault","newPost","userId","_id","current","value","data","FormData","fileName","Date","now","name","append","img","axios","console","log","window","location","reload","className","src","profilePhoto","alt","placeholder","username","ref","URL","createObjectURL","onClick","onSubmit","htmlFor","style","display","type","id","accept","onChange","target","files","post","likes","length","like","setLike","isLiked","setIsLiked","setUser","currentUser","isActive","setIsActive","useEffect","includes","fetchUser","res","likeHandler","err","to","format","createdAt","posts","setPosts","fetchPosts","sort","p1","p2","map","p"],"sourceRoot":""}